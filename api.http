### Return the user id and other information from the token. Basically we test the token here and check if authorized user or not.

# Response -
# {

# }

GET http://localhost:3000
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

### Test route maybe delete later.

# Response -
# {

# }

GET http://localhost:3000/auth
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

### POST request to sign up a user. Request need to provide json content type. Body should have name, email and password. (Maybe add more later).

# Response -
# {

# }

POST http://localhost:3000/auth/signup
Content-Type: application/json

{
    "name": "asd",
    "email": "asd@gmail.com",
    "password": "asd"
}

### Return all notes from the logged in user. Users can only see the notes they write. So we need to provide the authentication token from which we can take the user id. This user id can be used to fetch the notes written by the user.

# Response -
# {

# }

GET http://localhost:3000/api/v1/notes
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

### Create a note. Content type is json Authorization token is to be passed. Body has title and decsription of the note. Returns the note generated.

# Response -
# {

# }

POST http://localhost:3000/api/v1/notes/create
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

{
    "title": "This is the note title",
    "description": "top secret note writing!"
}

###

# Response -
# {

# }

GET http://localhost:3000/api/v1/admin/users
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwibmFtZSI6ImFkbWluIiwiZW1haWwiOiJhZG1pbkBhZG1pbi5jb20iLCJjcmVhdGVkX2F0IjoiMjAyMC0wNC0xMFQyMToxMDoxOS40NDNaIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNTg2NTU0ODg2LCJleHAiOjE1ODY2NDEyODZ9.g-QtGKN0RfsPflJs0yDjinjqC8hRdmYzwIki0jxmByU

###

# Response -
# {

# }

PATCH http://localhost:3000/api/v1/admin/user/1
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6InRlc3QiLCJlbWFpbCI6InRlc3RAdGVzdC5jb20iLCJjcmVhdGVkX2F0IjoiMjAyMC0wNC0xMVQxMzoyNzo0Mi40MzJaIiwicm9sZSI6InVzZXIiLCJhY3RpdmUiOnRydWUsImlhdCI6MTU4NjYxODU3MSwiZXhwIjoxNTg2NzA0OTcxfQ.qWv94AXJjeIzE1zmWaIGa2--tCT1W5niw7gaH8Sb3ow

{
    "active": true
}

###

# Response -
# {

# }

POST http://localhost:3000/auth/login
Content-Type: application/json

{
    "email": "ashish@gmail.com",
    "password": "asd"
}

###

# Response -
# {

# }

GET http://localhost:3000/api/v1/questions

### To ask a question we can use this route

# Response -
# {

# }

POST http://localhost:3000/api/v1/questions/ask
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

{
    "title": "How to run windows on pressure cooker?",
    "description": "So yesterday i was using my mac os as usally as i use it on my pressure cooker and it came to my mind why not run windows on it? any suggestions from where should i start?"
}


###

# Response -
# {

# }

GET http://localhost:3000/api/v1/questions/1

###

# Response -
# {

# }

POST http://localhost:3000/api/v1/questions/1/answer
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

{
    "ans": "Shut up pls"
}

###

# Response -
# {

# }

POST http://localhost:3000/api/v1/questions/1/comment
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

{
    "comment": "I think i got the solution!"
}

### /api/v1/users/:id/answers Returns all the answers by the user with id in the params

# Response -
# {

# }

GET http://localhost:3000/api/v1/users/2/answers

### /api/v1/users/:id/questions Returns all the questions asked by the user with id in the params.
# Response -
# {

# }

GET http://localhost:3000/api/v1/users/1/questions

###

# Response -
# {

# }

GET http://localhost:3000/api/v1/users/1/comments

###

# Response -
# {

# }

GET http://localhost:3000/api/v1/answers

### Return all the comments from the database. Guard the route for only allowed users later.

# Response -
# {

# }

GET http://localhost:3000/api/v1/comments

###

# Response -
# {

# }

POST http://localhost:3000/api/v1/answers/1/comment
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJhc2hpc2hAZ21haWwuY29tIiwiaWF0IjoxNTg3MDUxMjU5LCJleHAiOjE1ODcxMzc2NTl9.ilPZR6fQH3eEhFnHrVSSH54jw2KuDzL-Dugzv-7wWHk

{
    "comment": "really bro?"
}

### GET /api/v1/users Returns all the names of the users in an array
#[
    #{
        #"name": "user_name"
    #},
    #...
#]

GET http://localhost:3000/api/v1/users

### GET /api/v1/users/:id - Returns a particular user from the database.
#{
    #"id": "user_id"
    #"name": "user_name"
    #"email": "user_email"
#}

GET http://localhost:3000/api/v1/users/1